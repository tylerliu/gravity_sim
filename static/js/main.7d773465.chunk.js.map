{"version":3,"sources":["pause_button.png","play_button.png","Entity.js","Field.js","PlayPauseButton.js","MassSlider.js","Controller.js","Stage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Entity","mass","position_x","position_y","velocity_x","velocity_y","Object","classCallCheck","this","ctx","beginPath","arc","radius","Math","PI","fillStyle","color","fill","lineWidth","strokeStyle","stroke","getColor","log2","x","y","draw","Field","Entities","push","_","acc_x","Array","length","acc_y","i","j","dx","dy","r_2","acc_m","sqrt","pow","splice","isPlaying","forEach","e","update","Controller","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","playing","react_default","a","createElement","type","src","pause_image","play_image","alt","ref","className","onClick","bind","height","min","window","innerHeight","innerWidth","width","style","paddingLeft","_this2","button","refs","addEventListener","setState","blur","Component","MassSlider","selectedMass","display","flexDirection","justifyContent","max","defaultValue","step","onChange","changeMass","toPrecision","value","slider","toMass","sheet","insertRule","deleteRule","React","pathDrawing","PlayPauseButton_Controller","changePlayState","padding","MassSlider_MassSlider","changePathDrawing","numEntities","stage","clear","target","new_state","pathCheckBox","drawingPath","num","Stage","path_ctx","field","isPathDrawing","mouseDown","flex","position","left","top","zIndex","backgroundColor","Controller_Controller","canvas","getContext","addEntity","requestAnimationFrame","path_canvas","onmousedown","currentMX","mouseDownX","offsetX","currentMY","mouseDownY","offsetY","onmousemove","onmouseout","onmouseup","clearRect","drawExample","drawVelocity","draw_path","controller","updateEntity","moveTo","lineTo","font","XString","YString","MString","xOffset","measureText","strokeText","App","src_Stage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d773465.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pause_button.72414a74.png\";","module.exports = __webpack_public_path__ + \"static/media/play_button.e291b709.png\";","/**\n * Created by TylerLiu on 2018/12/21.\n */\n\nexport default class Entity {\n\n    constructor(mass, position_x, position_y, velocity_x, velocity_y) {\n        this.mass = mass;\n        this.velocity_x = velocity_x;\n        this.velocity_y = velocity_y;\n        this.position_x = position_x;\n        this.position_y = position_y;\n    }\n\n    static getColor(mass) {\n        //0 mass is white\n        if (mass === 0 || mass <= 0.000001) return '#FFFFFF'\n        let lo = Math.log2(mass)\n        return 'hsl(' + ((lo * 10) | 0) + ', 100%, 50%)'\n    }\n\n    get color() {\n        return Entity.getColor(this.mass)\n    }\n\n\n    get radius() {\n        if (this.mass === 0 || this.mass <= 0.000001) return 2;\n        let lo = Math.log2(this.mass) * 0.75;\n        return lo + 2;\n    }\n\n    draw(ctx) {\n        ctx.beginPath();\n        ctx.arc(this.position_x, this.position_y, this.radius, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.lineWidth = 0;\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0)';\n        ctx.stroke();\n    }\n\n    static drawExample(ctx, mass, x, y) {\n        let e = new Entity(mass, x, y, 0, 0)\n        e.draw(ctx)\n    }\n}","/**\n * Created by TylerLiu on 2018/12/21.\n */\nimport Entity from './Entity.js'\n\nlet NUM_ENLER = 100;\nlet FRAME_SEC = 1 / 30;\n\nexport default class Field {\n    constructor() {\n        this.Entities = []\n    }\n\n    addEntity(mass, position_x, position_y, velocity_x, velocity_y) {\n        this.Entities.push(new Entity(mass, position_x, position_y, velocity_x, velocity_y))\n    }\n\n    //update field to next frame\n    update() {\n        for (let _ = 0; _ < NUM_ENLER; _ ++) {\n            //acceleration\n            let acc_x = new Array(this.Entities.length)\n            let acc_y = new Array(this.Entities.length)\n            for (let i = 0; i < acc_x.length; i ++) {\n                acc_x[i] = acc_y[i] = 0.0\n            }\n\n            for (let i = 0; i < this.Entities.length; i ++)\n                for (let j = i + 1; j < this.Entities.length; j ++) {\n                    let dx = 1.0 * this.Entities[i].position_x - this.Entities[j].position_x;\n                    let dy = 1.0 * this.Entities[i].position_y - this.Entities[j].position_y;\n                    let r_2 = dx * dx + dy * dy;\n                    let acc_m = this.Entities[j].mass / r_2\n                    acc_x[i] += acc_m * (this.Entities[j].position_x - this.Entities[i].position_x) / Math.sqrt(r_2)\n                    acc_y[i] += acc_m * (this.Entities[j].position_y - this.Entities[i].position_y) / Math.sqrt(r_2)\n                    acc_m = this.Entities[i].mass / r_2\n                    acc_x[j] += acc_m * (this.Entities[i].position_x - this.Entities[j].position_x) / Math.sqrt(r_2)\n                    acc_y[j] += acc_m * (this.Entities[i].position_y - this.Entities[j].position_y) / Math.sqrt(r_2)\n                }\n\n            for (let i = 0; i < this.Entities.length; i ++) {\n\n                //multiplier\n                acc_x[i] *= 1.0\n                acc_y[i] *= 1.0\n\n                //update velocity\n                this.Entities[i].velocity_x += acc_x[i] * FRAME_SEC / NUM_ENLER\n                this.Entities[i].velocity_y += acc_y[i] * FRAME_SEC / NUM_ENLER\n\n                //update position\n                this.Entities[i].position_x += this.Entities[i].velocity_x * FRAME_SEC / NUM_ENLER\n                this.Entities[i].position_y += this.Entities[i].velocity_y * FRAME_SEC / NUM_ENLER\n            }\n\n            //collision detection\n            for (let i = 0; i < this.Entities.length; i ++)\n                for (let j = i + 1; j < this.Entities.length; j ++) {\n                    let r_2 = Math.pow(this.Entities[i].position_x - this.Entities[j].position_x, 2) +\n                        Math.pow(this.Entities[i].position_y - this.Entities[j].position_y, 2)\n                    if (Math.sqrt(r_2) <= this.Entities[i].radius + this.Entities[j].radius) { //collided\n                        this.Entities[i].position_x = (this.Entities[i].position_x * this.Entities[i].mass + this.Entities[j].position_x * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                        this.Entities[i].position_y = (this.Entities[i].position_y * this.Entities[i].mass + this.Entities[j].position_y * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                        this.Entities[i].velocity_x = (this.Entities[i].velocity_x * this.Entities[i].mass + this.Entities[j].velocity_x * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                        this.Entities[i].velocity_y = (this.Entities[i].velocity_y * this.Entities[i].mass + this.Entities[j].velocity_y * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                        this.Entities[i].mass += this.Entities[j].mass\n\n                        //delete j\n                        this.Entities.splice(j, 1)\n                        j --\n\n                    }\n                }\n        }\n    }\n\n    draw(ctx, isPlaying) {\n        this.Entities.forEach((e) => e.draw(ctx))\n        if (isPlaying) this.update()\n    }\n\n    draw_path(ctx) {\n        this.Entities.forEach((e) => {\n            ctx.beginPath();\n            ctx.arc(e.position_x, e.position_y, 1, 0, 2 * Math.PI, false);\n            ctx.fillStyle = e.color;\n            ctx.fill();\n            ctx.lineWidth = 0;\n            ctx.strokeStyle = 'rgba(0, 0, 0, 0)';\n            ctx.stroke();\n        })\n    }\n\n    clear() {\n        this.Entities = []\n    }\n}","/**\n * Created by TylerLiu on 2018/12/24.\n */\nimport React, { Component } from 'react';\nimport pause_image from './pause_button.png'\nimport play_image from './play_button.png'\nimport './PlayPauseButton.css'\n\nexport default class Controller extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: true\n        }\n    }\n\n    render() {\n        return(\n            <input type=\"image\" src={this.state.playing? pause_image : play_image}\n                   alt={this.state.playing? \"Pause\" : \"Play\"}\n                   ref=\"button\" className=\"button\"\n                   onClick={this.onClick.bind(this)}\n                   height={Math.min(window.innerHeight, window.innerWidth) * 0.08}\n                   width={Math.min(window.innerHeight, window.innerWidth) * 0.08}\n                   style={{paddingLeft: Math.min(window.innerHeight, window.innerWidth) * 0.01}}\n            />\n        )\n        //pause/play\n        //mass and color slider\n    }\n\n    componentDidMount() {\n        this.button = this.refs.button;\n        window.addEventListener('resize', ()=>this.setState({}))\n    }\n\n    onClick() {\n        this.props.onClick(!this.state.playing);\n        this.setState({playing: !this.state.playing});\n        this.refs.button.blur()\n        return false;\n    }\n\n\n}","/**\n * Created by TylerLiu on 2018/12/24.\n */\n\nimport React from 'react'\nimport './MassSlider.css'\nimport Entity from './Entity'\n\nexport default class MassSlider extends React.Component{\n    constructor(props) {\n        super(props)\n        this.selectedMass = 1;\n    }\n\n    render() {\n        return(\n            <div style={{height: \"10vh\", width: \"40vw\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\"}}>\n                <style ref=\"style\"/>\n                <input type=\"range\" min=\"-1\" max=\"10\" defaultValue=\"0\" step=\"any\" className=\"slider\"\n                       ref=\"slider\" onChange={this.changeMass.bind(this)}/>\n                <label>Mass: {this.selectedMass.toPrecision(3)}</label>\n            </div>\n        )\n    }\n\n    toMass(value) {\n        if (value < -0.4) {\n            this.refs.slider.value = -1;\n            return 0;\n        }\n        if (value < 0) {\n            this.refs.slider.value = 0;\n            return 1;\n        }\n        return Math.pow(10, value);\n\n    }\n\n    componentDidMount() {\n        this.selectedMass = this.toMass(this.refs.slider.value);\n        this.refs.style.sheet.insertRule('.slider::-webkit-slider-thumb {background: '+ Entity.getColor(this.selectedMass) + ';}', 0)\n    }\n\n    changeMass() {\n        this.selectedMass = this.toMass(this.refs.slider.value);\n        this.refs.style.sheet.deleteRule(0);\n        this.refs.style.sheet.insertRule('.slider::-webkit-slider-thumb {background: '+ Entity.getColor(this.selectedMass) + ';}', 0)\n        this.setState({});\n        this.props.changeMass(this.selectedMass);\n    }\n}\n","/**\n * Created by TylerLiu on 2018/12/23.\n */\nimport React, { Component } from 'react';\nimport PlayPauseButton from './PlayPauseButton'\nimport MassSlider from \"./MassSlider\";\nimport './Controller.css'\n\nexport default class Controller extends Component{\n\n    constructor(props) {\n        super(props)\n        this.pathDrawing = false;\n    }\n\n    render() {\n        return(\n            <div className=\"controller\">\n\n                <PlayPauseButton onClick={this.changePlayState.bind(this)} style={{height: \"10vh\", width: \"10vh\", padding:5}}/>\n                <MassSlider changeMass={this.changeMass.bind(this)}/>\n                <button className=\"togglePath\" ref=\"pathCheckBox\" onClick={this.changePathDrawing.bind(this)}><strong>Path</strong></button>\n\n                <div className=\"div2\">\n                    <label>Entities: {this.numEntities + \"  \"}</label>\n                    <button className=\"clear\" onClick={(e) => {this.props.stage.clear();\n                        e.target.blur();}}><strong>CLEAR</strong></button>\n                </div>\n            </div>\n        )\n\n        //show number of particle\n        //clear button\n    }\n\n    componentDidMount() {\n        this.setState({});\n    }\n\n    changePlayState(new_state) {\n        this.props.stage.isPlaying = new_state\n    }\n\n    changePathDrawing() {\n        this.pathDrawing = !this.pathDrawing;\n        if (this.pathDrawing)\n            this.refs.pathCheckBox.className = \"togglePath active\";\n        else this.refs.pathCheckBox.className = \"togglePath\";\n        this.props.stage.drawingPath(this.pathDrawing);\n        this.setState({});\n        this.refs.pathCheckBox.blur();\n    }\n\n    changeMass(mass) {\n        this.props.stage.selectedMass = mass;\n    }\n\n    updateEntity(num) {\n        this.numEntities = num;\n        this.setState({});\n    }\n}","import React, { Component } from 'react'\nimport Field from './Field.js'\nimport Controller from \"./Controller\"\nimport Entity from './Entity'\n\nclass Stage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.ctx = null\n        this.path_ctx = null\n        this.field = new Field()\n        this.isPathDrawing = false\n        this.isPlaying = true\n        this.selectedMass = 1\n        this.mouseDown = false\n    }\n\n    render() {\n        return(\n            <div style={{height: \"100vh\", width: \"100vw\", flex : 1}}>\n                <div style={{height: \"90vh\", width: \"100vw\",position: \"relative\"}}>\n                    <canvas ref=\"path_canvas\" width={window.innerWidth} height={window.innerHeight * 0.9} style={{position: \"absolute\", left: 0, top: 0, zIndex: 0, backgroundColor : 'black'}} />\n                    <canvas ref=\"canvas\" width={window.innerWidth} height={window.innerHeight * 0.9} style={{position: \"absolute\", left: 0, top: 0, zIndex: 1, backgroundColor : 'transparent'}}/>\n                </div>\n                <Controller ref=\"controller\" stage={this} style={{height: \"10vh\", width: \"100vw\"}}/>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        this.ctx = canvas.getContext(\"2d\")\n        this.field.addEntity(Math.pow(10, 5), 200, 200, 0, 0)\n        this.field.addEntity(1000, 200, 300, 30, 0)\n        this.field.addEntity(1000, 200, 100, -30, 0)\n        this.field.addEntity(1000, 100, 200, 0, 30)\n        this.field.addEntity(1000, 300, 200, 0, -30)\n        //TODO prepare next state after draw\n        window.requestAnimationFrame(this.draw.bind(this));\n\n        const path_canvas = this.refs.path_canvas\n        this.path_ctx = path_canvas.getContext(\"2d\")\n        window.addEventListener('resize', ()=>this.setState({}))\n        this.refs.canvas.onmousedown = (e) => {\n            this.mouseDown = true;\n            this.currentMX = this.mouseDownX = e.offsetX;\n            this.currentMY = this.mouseDownY = e.offsetY;\n        }\n\n        this.refs.canvas.onmousemove = (e) => {\n            this.currentMX = e.offsetX;\n            this.currentMY = e.offsetY;\n        }\n\n        this.refs.canvas.onmouseout = () => {\n            this.mouseDown = false;\n        }\n        this.refs.canvas.onmouseup = (e) => {\n            if (this.mouseDown === true)\n                this.field.addEntity(this.selectedMass, this.mouseDownX, this.mouseDownY,\n                //velocity\n                (e.offsetX - this.mouseDownX)/2, (e.offsetY - this.mouseDownY)/2)\n            this.mouseDown = false;\n        }\n    }\n\n    draw() {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        this.field.draw(this.ctx, this.isPlaying);\n        if (this.mouseDown) {\n            Entity.drawExample(this.ctx, this.selectedMass, this.mouseDownX, this.mouseDownY)\n            if (this.currentMX !== this.mouseDownX || this.currentMY !== this.mouseDownY) this.drawVelocity();\n        }\n        if (this.isPlaying && this.isPathDrawing) this.field.draw_path(this.path_ctx);\n        window.requestAnimationFrame(this.draw.bind(this));\n        this.refs.controller.updateEntity(this.field.Entities.length)\n    }\n\n    drawingPath(value) {\n        this.isPathDrawing = value;\n        if (!value) this.path_ctx.clearRect(0, 0, this.path_ctx.canvas.width, this.path_ctx.canvas.height);\n    }\n\n    drawVelocity() {\n        this.ctx.beginPath()\n        this.ctx.strokeStyle = \"white\"\n        this.ctx.moveTo(this.mouseDownX, this.mouseDownY)\n        this.ctx.lineTo(this.currentMX, this.currentMY)\n        this.ctx.stroke()\n\n        this.ctx.font = \"12px Arial\"\n        const dx = (this.currentMX - this.mouseDownX)/2\n        const dy = (this.mouseDownY - this.currentMY)/2\n        const XString = \"Vx: \" + dx.toPrecision(3)\n        const YString = \"Vy: \" + dy.toPrecision(3)\n        const MString = \"Vy: \" + Math.sqrt(dx * dx + dy * dy).toPrecision(3)\n\n        let xOffset = 0\n        if (this.currentMX < this.mouseDownX) xOffset -= this.ctx.measureText(XString + \" \").width\n\n        this.ctx.strokeText(XString, this.currentMX + xOffset, this.currentMY - 6)\n        this.ctx.strokeText(YString, this.currentMX + xOffset, this.currentMY + 6)\n        this.ctx.strokeText(MString, this.currentMX + xOffset, this.currentMY + 18)\n    }\n\n    clear() {\n        this.field.clear();\n        if (this.path_ctx !== null)\n            this.path_ctx.clearRect(0, 0, this.path_ctx.canvas.width, this.path_ctx.canvas.height);\n    }\n\n}\nexport default Stage","import React, { Component } from 'react';\nimport './App.css';\nimport Stage from './Stage';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n        <Stage/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}