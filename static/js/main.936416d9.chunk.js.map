{"version":3,"sources":["Entity.js","Field.js","PlayPauseButton.js","MassSlider.js","Controller.js","Stage.js","App.js","serviceWorker.js","index.js"],"names":["Entity","mass","position_x","position_y","velocity_x","velocity_y","this","ctx","beginPath","arc","radius","Math","PI","fillStyle","color","fill","lineWidth","strokeStyle","stroke","getColor","log2","x","y","draw","Field","Entities","push","_","acc_x","Array","length","acc_y","i","j","dx","dy","r_2","acc_m","sqrt","pow","splice","isPlaying","forEach","e","update","Controller","props","state","playing","Button","variant","ref","onClick","bind","icon","primitiveSquare","triangleRight","button","refs","window","addEventListener","setState","ppButton","blur","Component","MassSlider","selectedMass","Col","sm","style","display","flexDirection","justifyContent","type","min","max","defaultValue","step","className","onChange","changeMass","toPrecision","value","slider","toMass","sheet","insertRule","deleteRule","React","pathDrawing","Navbar","bg","fixed","class","changePlayState","height","width","padding","changePathDrawing","numEntities","stage","clear","target","new_state","pathCheckBox","drawingPath","num","Stage","path_ctx","field","isPathDrawing","mouseDown","position","left","top","innerHeight","innerWidth","zIndex","backgroundColor","canvas","getContext","addEntity","requestAnimationFrame","path_canvas","onmousedown","currentMX","mouseDownX","offsetX","currentMY","mouseDownY","offsetY","ontouchstart","touches","clientX","clientY","onmousemove","ontouchmove","ontouchcancel","onmouseout","onmouseup","ontouchend","changedTouches","clearRect","drawExample","drawVelocity","draw_path","controller","updateEntity","moveTo","lineTo","font","XString","YString","MString","xOffset","measureText","strokeText","App","Container","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4SAIqBA,G,kBAEjB,WAAYC,EAAMC,EAAYC,EAAYC,EAAYC,GAAa,oBAC/DC,KAAKL,KAAOA,EACZK,KAAKF,WAAaA,EAClBE,KAAKD,WAAaA,EAClBC,KAAKJ,WAAaA,EAClBI,KAAKH,WAAaA,E,iDAqBjBI,GACDA,EAAIC,YACJD,EAAIE,IAAIH,KAAKJ,WAAYI,KAAKH,WAAYG,KAAKI,OAAQ,EAAG,EAAIC,KAAKC,IAAI,GACvEL,EAAIM,UAAYP,KAAKQ,MACrBP,EAAIQ,OACJR,EAAIS,UAAY,EAChBT,EAAIU,YAAc,mBAClBV,EAAIW,W,4BAjBJ,OAAOlB,EAAOmB,SAASb,KAAKL,Q,6BAK5B,OAAkB,IAAdK,KAAKL,MAAcK,KAAKL,MAAQ,KAAiB,EACrB,IAAvBU,KAAKS,KAAKd,KAAKL,MACZ,K,gCAfAA,GAEZ,OAAa,IAATA,GAAcA,GAAQ,KAAiB,UAEpC,QAAgB,GADdU,KAAKS,KAAKnB,GACU,GAAK,iB,kCAwBnBM,EAAKN,EAAMoB,EAAGC,GACrB,IAAItB,EAAOC,EAAMoB,EAAGC,EAAG,EAAG,GAChCC,KAAKhB,O,MCpCMiB,E,WACjB,aAAe,oBACXlB,KAAKmB,SAAW,G,sDAGVxB,EAAMC,EAAYC,EAAYC,EAAYC,GAChDC,KAAKmB,SAASC,KAAK,IAAI1B,EAAOC,EAAMC,EAAYC,EAAYC,EAAYC,M,+BAKxE,IAAK,IAAIsB,EAAI,EAAGA,EAdR,IAcuBA,IAAM,CAIjC,IAFA,IAAIC,EAAQ,IAAIC,MAAMvB,KAAKmB,SAASK,QAChCC,EAAQ,IAAIF,MAAMvB,KAAKmB,SAASK,QAC3BE,EAAI,EAAGA,EAAIJ,EAAME,OAAQE,IAC9BJ,EAAMI,GAAKD,EAAMC,GAAK,EAG1B,IAAK,IAAIA,EAAI,EAAGA,EAAI1B,KAAKmB,SAASK,OAAQE,IACtC,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAI3B,KAAKmB,SAASK,OAAQG,IAAM,CAChD,IAAIC,EAAK,EAAM5B,KAAKmB,SAASO,GAAG9B,WAAaI,KAAKmB,SAASQ,GAAG/B,WAC1DiC,EAAK,EAAM7B,KAAKmB,SAASO,GAAG7B,WAAaG,KAAKmB,SAASQ,GAAG9B,WAC1DiC,EAAMF,EAAKA,EAAKC,EAAKA,EACrBE,EAAQ/B,KAAKmB,SAASQ,GAAGhC,KAAOmC,EACpCR,EAAMI,IAAMK,GAAS/B,KAAKmB,SAASQ,GAAG/B,WAAaI,KAAKmB,SAASO,GAAG9B,YAAcS,KAAK2B,KAAKF,GAC5FL,EAAMC,IAAMK,GAAS/B,KAAKmB,SAASQ,GAAG9B,WAAaG,KAAKmB,SAASO,GAAG7B,YAAcQ,KAAK2B,KAAKF,GAC5FC,EAAQ/B,KAAKmB,SAASO,GAAG/B,KAAOmC,EAChCR,EAAMK,IAAMI,GAAS/B,KAAKmB,SAASO,GAAG9B,WAAaI,KAAKmB,SAASQ,GAAG/B,YAAcS,KAAK2B,KAAKF,GAC5FL,EAAME,IAAMI,GAAS/B,KAAKmB,SAASO,GAAG7B,WAAaG,KAAKmB,SAASQ,GAAG9B,YAAcQ,KAAK2B,KAAKF,GAGpG,IAAK,IAAIJ,EAAI,EAAGA,EAAI1B,KAAKmB,SAASK,OAAQE,IAGtCJ,EAAMI,IAAM,EACZD,EAAMC,IAAM,EAGZ1B,KAAKmB,SAASO,GAAG5B,YAAcwB,EAAMI,IAzCrC,EAAI,IADJ,IA2CA1B,KAAKmB,SAASO,GAAG3B,YAAc0B,EAAMC,IA1CrC,EAAI,IADJ,IA8CA1B,KAAKmB,SAASO,GAAG9B,YAAcI,KAAKmB,SAASO,GAAG5B,YA7ChD,EAAI,IADJ,IA+CAE,KAAKmB,SAASO,GAAG7B,YAAcG,KAAKmB,SAASO,GAAG3B,YA9ChD,EAAI,IADJ,IAmDJ,IAAK,IAAI2B,EAAI,EAAGA,EAAI1B,KAAKmB,SAASK,OAAQE,IACtC,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAI3B,KAAKmB,SAASK,OAAQG,IAAM,CAChD,IAAIG,EAAMzB,KAAK4B,IAAIjC,KAAKmB,SAASO,GAAG9B,WAAaI,KAAKmB,SAASQ,GAAG/B,WAAY,GAC1ES,KAAK4B,IAAIjC,KAAKmB,SAASO,GAAG7B,WAAaG,KAAKmB,SAASQ,GAAG9B,WAAY,GACpEQ,KAAK2B,KAAKF,IAAQ9B,KAAKmB,SAASO,GAAGtB,OAASJ,KAAKmB,SAASQ,GAAGvB,SACzDJ,KAAKmB,SAASO,GAAG/B,KAAO,MAAaK,KAAKmB,SAASQ,GAAGhC,KAAO,MAC7DK,KAAKmB,SAASO,GAAG9B,YAAcI,KAAKmB,SAASO,GAAG9B,WAAaI,KAAKmB,SAASQ,GAAG/B,YAAc,EAC5FI,KAAKmB,SAASO,GAAG7B,YAAcG,KAAKmB,SAASO,GAAG7B,WAAaG,KAAKmB,SAASQ,GAAG9B,YAAc,EAC5FG,KAAKmB,SAASO,GAAG5B,YAAcE,KAAKmB,SAASO,GAAG5B,WAAaE,KAAKmB,SAASQ,GAAG7B,YAAc,EAC5FE,KAAKmB,SAASO,GAAG3B,YAAcC,KAAKmB,SAASO,GAAG3B,WAAaC,KAAKmB,SAASQ,GAAG5B,YAAc,IAG5FC,KAAKmB,SAASO,GAAG9B,YAAcI,KAAKmB,SAASO,GAAG9B,WAAaI,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAG/B,WAAaI,KAAKmB,SAASQ,GAAGhC,OAASK,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAGhC,MACtLK,KAAKmB,SAASO,GAAG7B,YAAcG,KAAKmB,SAASO,GAAG7B,WAAaG,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAG9B,WAAaG,KAAKmB,SAASQ,GAAGhC,OAASK,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAGhC,MACtLK,KAAKmB,SAASO,GAAG5B,YAAcE,KAAKmB,SAASO,GAAG5B,WAAaE,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAG7B,WAAaE,KAAKmB,SAASQ,GAAGhC,OAASK,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAGhC,MACtLK,KAAKmB,SAASO,GAAG3B,YAAcC,KAAKmB,SAASO,GAAG3B,WAAaC,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAG5B,WAAaC,KAAKmB,SAASQ,GAAGhC,OAASK,KAAKmB,SAASO,GAAG/B,KAAOK,KAAKmB,SAASQ,GAAGhC,MACtLK,KAAKmB,SAASO,GAAG/B,MAAQK,KAAKmB,SAASQ,GAAGhC,MAI9CK,KAAKmB,SAASe,OAAOP,EAAG,GACxBA,S,2BAOf1B,EAAKkC,GACNnC,KAAKmB,SAASiB,SAAQ,SAACC,GAAD,OAAOA,EAAEpB,KAAKhB,MAChCkC,GAAWnC,KAAKsC,W,gCAGdrC,GACND,KAAKmB,SAASiB,SAAQ,SAACC,GACnBpC,EAAIC,YACJD,EAAIE,IAAIkC,EAAEzC,WAAYyC,EAAExC,WAAY,EAAG,EAAG,EAAIQ,KAAKC,IAAI,GACvDL,EAAIM,UAAY8B,EAAE7B,MAClBP,EAAIQ,OACJR,EAAIS,UAAY,EAChBT,EAAIU,YAAc,mBAClBV,EAAIW,c,8BAKRZ,KAAKmB,SAAW,O,qBC/FHoB,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,SAAS,GAHE,E,sEAQf,OAAI1C,KAAKyC,MAAMC,QAEP,kBAACC,EAAA,EAAD,CAAQC,QAAQ,eAAeC,IAAI,WAAWC,QAAS9C,KAAK8C,QAAQC,KAAK/C,OACrE,kBAAC,IAAD,CAASgD,KAAMC,MADnB,SAKJ,kBAACN,EAAA,EAAD,CAAQC,QAAQ,eAAeC,IAAI,WAAWC,QAAS9C,KAAK8C,QAAQC,KAAK/C,OACrE,kBAAC,IAAD,CAASgD,KAAME,MADnB,W,0CAMa,IAAD,OAChBlD,KAAKmD,OAASnD,KAAKoD,KAAKD,OACxBE,OAAOC,iBAAiB,UAAU,kBAAI,EAAKC,SAAS,S,gCAOpD,OAHAvD,KAAKwC,MAAMM,SAAS9C,KAAKyC,MAAMC,SAC/B1C,KAAKuD,SAAS,CAACb,SAAU1C,KAAKyC,MAAMC,UACpC1C,KAAKoD,KAAKI,SAASC,QACZ,M,GAhCyBC,a,iBCEnBC,E,YACjB,WAAYnB,GAAQ,IAAD,8BACf,4CAAMA,KACDoB,aAAe,EAFL,E,sEAMf,OACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,WAC1E,2BAAOrB,IAAI,UACX,2BAAOsB,KAAK,QAAQC,IAAI,KAAKC,IAAI,KAAKC,aAAa,IAAIC,KAAK,MAAMC,UAAU,SACrE3B,IAAI,SAAS4B,SAAUzE,KAAK0E,WAAW3B,KAAK/C,QACnD,wCAAcA,KAAK4D,aAAae,YAAY,O,6BAKjDC,GACH,OAAIA,GAAS,IACT5E,KAAKoD,KAAKyB,OAAOD,OAAS,EACnB,GAEPA,EAAQ,GACR5E,KAAKoD,KAAKyB,OAAOD,MAAQ,EAClB,GAEJvE,KAAK4B,IAAI,GAAI2C,K,0CAKpB5E,KAAK4D,aAAe5D,KAAK8E,OAAO9E,KAAKoD,KAAKyB,OAAOD,OACjD5E,KAAKoD,KAAKW,MAAMgB,MAAMC,WAAW,8CAA+CtF,EAAOmB,SAASb,KAAK4D,cAAgB,KAAM,K,mCAI3H5D,KAAK4D,aAAe5D,KAAK8E,OAAO9E,KAAKoD,KAAKyB,OAAOD,OACjD5E,KAAKoD,KAAKW,MAAMgB,MAAME,WAAW,GACjCjF,KAAKoD,KAAKW,MAAMgB,MAAMC,WAAW,8CAA+CtF,EAAOmB,SAASb,KAAK4D,cAAgB,KAAM,GAC3H5D,KAAKuD,SAAS,IACdvD,KAAKwC,MAAMkC,WAAW1E,KAAK4D,kB,GAxCKsB,IAAMxB,W,QCCzBnB,E,YAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACD2C,aAAc,EAFJ,E,sEAKT,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,MAAM,SAASd,UAAU,iCACxC,kBAAC,EAAD,CAAiBe,MAAM,MAAKzC,QAAS9C,KAAKwF,gBAAgBzC,KAAK/C,MAAO+D,MAAO,CAAC0B,OAAQ,OAAQC,MAAO,OAAQC,QAAQ,KACrH,kBAAC,EAAD,CAAYjB,WAAY1E,KAAK0E,WAAW3B,KAAK/C,QAC7C,kBAAC2C,EAAA,EAAD,CAAQC,QAAQ,eAAeC,IAAI,eAAeC,QAAS9C,KAAK4F,kBAAkB7C,KAAK/C,OAAvF,QAEA,2CAAiBA,KAAK6F,YAAc,MACpC,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,iBAAiBE,QAAS,SAACT,GAAO,EAAKG,MAAMsD,MAAMC,QAC3D1D,EAAE2D,OAAOvC,SADjB,Y,0CAURzD,KAAKuD,SAAS,M,sCAGF0C,GACZjG,KAAKwC,MAAMsD,MAAM3D,UAAY8D,I,0CAI7BjG,KAAKmF,aAAenF,KAAKmF,YACrBnF,KAAKmF,aACLnF,KAAKoD,KAAK8C,aAAatD,QAAU,OACjC5C,KAAKoD,KAAK8C,aAAa1B,UAAY,iBAGnCxE,KAAKoD,KAAK8C,aAAatD,QAAU,eACjC5C,KAAKoD,KAAK8C,aAAa1B,UAAY,wBAEvCxE,KAAKwC,MAAMsD,MAAMK,YAAYnG,KAAKmF,aAClCnF,KAAKuD,SAAS,IACdvD,KAAKoD,KAAK8C,aAAazC,S,iCAGhB9D,GACPK,KAAKwC,MAAMsD,MAAMlC,aAAejE,I,mCAGvByG,GACTpG,KAAK6F,YAAcO,EACnBpG,KAAKuD,SAAS,Q,GArDkBG,aCyHzB2C,E,YA5HX,WAAY7D,GAAQ,IAAD,8BACf,4CAAMA,KACDvC,IAAM,KACX,EAAKqG,SAAW,KAChB,EAAKC,MAAQ,IAAIrF,EACjB,EAAKsF,eAAgB,EACrB,EAAKrE,WAAY,EACjB,EAAKyB,aAAe,EACpB,EAAK6C,WAAY,EARF,E,sEAYf,OACI,yBAAK1C,MAAO,CAAC2C,SAAU,WAAYC,KAAM,EAAGC,IAAK,IAC7C,yBAAK7C,MAAO,CAAC0B,OAAQpC,OAAOwD,YAAanB,MAAOrC,OAAOyD,WAAYJ,SAAU,aACzE,4BAAQ7D,IAAI,cAAc6C,MAAOrC,OAAOyD,WAAYrB,OAAQpC,OAAOwD,YAAa9C,MAAO,CAAC2C,SAAU,WAAYC,KAAM,EAAGC,IAAK,EAAGG,OAAQ,EAAGC,gBAAkB,WAC5J,4BAAQnE,IAAI,SAAS6C,MAAOrC,OAAOyD,WAAYrB,OAAQpC,OAAOwD,YAAa9C,MAAO,CAAC2C,SAAU,WAAYC,KAAM,EAAGC,IAAK,EAAGG,OAAQ,EAAGC,gBAAkB,kBAE3J,kBAAC,EAAD,CAAYnE,IAAI,aAAaiD,MAAO9F,U,0CAK3B,IAAD,OACViH,EAASjH,KAAKoD,KAAK6D,OACzBjH,KAAKC,IAAMgH,EAAOC,WAAW,MAC7BlH,KAAKuG,MAAMY,UAAU9G,KAAK4B,IAAI,GAAI,GAAI,IAAK,IAAK,EAAG,GACnDjC,KAAKuG,MAAMY,UAAU,IAAM,IAAK,IAAK,GAAI,GACzCnH,KAAKuG,MAAMY,UAAU,IAAM,IAAK,KAAM,GAAI,GAC1CnH,KAAKuG,MAAMY,UAAU,IAAM,IAAK,IAAK,EAAG,IACxCnH,KAAKuG,MAAMY,UAAU,IAAM,IAAK,IAAK,GAAI,IAEzC9D,OAAO+D,sBAAsBpH,KAAKiB,KAAK8B,KAAK/C,OAE5C,IAAMqH,EAAcrH,KAAKoD,KAAKiE,YAC9BrH,KAAKsG,SAAWe,EAAYH,WAAW,MACvC7D,OAAOC,iBAAiB,UAAU,kBAAI,EAAKC,SAAS,OAEpDvD,KAAKoD,KAAK6D,OAAOK,YAAc,SAACjF,GAC5B,EAAKoE,WAAY,EACjB,EAAKc,UAAY,EAAKC,WAAanF,EAAEoF,QACrC,EAAKC,UAAY,EAAKC,WAAatF,EAAEuF,SAEzC5H,KAAKoD,KAAK6D,OAAOY,aAAe,SAACxF,GAC7B,EAAKoE,WAAY,EACjB,EAAKc,UAAY,EAAKC,WAAanF,EAAEyF,QAAQ,GAAGC,QAChD,EAAKL,UAAY,EAAKC,WAAatF,EAAEyF,QAAQ,GAAGE,SAGpDhI,KAAKoD,KAAK6D,OAAOgB,YAAc,SAAC5F,GAC5B,EAAKkF,UAAYlF,EAAE0F,QACnB,EAAKL,UAAYrF,EAAE2F,SAEvBhI,KAAKoD,KAAK6D,OAAOiB,YAAc,SAAC7F,GAC5B,EAAKkF,UAAYlF,EAAEyF,QAAQ,GAAGC,QAC9B,EAAKL,UAAYrF,EAAEyF,QAAQ,GAAGE,SAGlChI,KAAKoD,KAAK6D,OAAOkB,cAAgBnI,KAAKoD,KAAK6D,OAAOmB,WAAa,WAC3D,EAAK3B,WAAY,GAErBzG,KAAKoD,KAAK6D,OAAOoB,UAAY,SAAChG,IACH,IAAnB,EAAKoE,WACL,EAAKF,MAAMY,UAAU,EAAKvD,aAAc,EAAK4D,WAAY,EAAKG,YAE7DtF,EAAEoF,QAAU,EAAKD,YAAY,GAAInF,EAAEuF,QAAU,EAAKD,YAAY,GACnE,EAAKlB,WAAY,GAGrBzG,KAAKoD,KAAK6D,OAAOqB,WAAa,SAACjG,IACJ,IAAnB,EAAKoE,WACL,EAAKF,MAAMY,UAAU,EAAKvD,aAAc,EAAK4D,WAAY,EAAKG,YAE7DtF,EAAEkG,eAAe,GAAGR,QAAU,EAAKP,YAAY,GAAInF,EAAEkG,eAAe,GAAGP,QAAU,EAAKL,YAAY,GACvG,EAAKlB,WAAY,K,6BAKrBzG,KAAKC,IAAIuI,UAAU,EAAG,EAAGxI,KAAKC,IAAIgH,OAAOvB,MAAO1F,KAAKC,IAAIgH,OAAOxB,QAChEzF,KAAKuG,MAAMtF,KAAKjB,KAAKC,IAAKD,KAAKmC,WAC3BnC,KAAKyG,YACL/G,EAAO+I,YAAYzI,KAAKC,IAAKD,KAAK4D,aAAc5D,KAAKwH,WAAYxH,KAAK2H,YAClE3H,KAAKuH,YAAcvH,KAAKwH,YAAcxH,KAAK0H,YAAc1H,KAAK2H,YAAY3H,KAAK0I,gBAEnF1I,KAAKmC,WAAanC,KAAKwG,eAAexG,KAAKuG,MAAMoC,UAAU3I,KAAKsG,UACpEjD,OAAO+D,sBAAsBpH,KAAKiB,KAAK8B,KAAK/C,OAC5CA,KAAKoD,KAAKwF,WAAWC,aAAa7I,KAAKuG,MAAMpF,SAASK,U,kCAG9CoD,GACR5E,KAAKwG,cAAgB5B,EAChBA,GAAO5E,KAAKsG,SAASkC,UAAU,EAAG,EAAGxI,KAAKsG,SAASW,OAAOvB,MAAO1F,KAAKsG,SAASW,OAAOxB,U,qCAI3FzF,KAAKC,IAAIC,YACTF,KAAKC,IAAIU,YAAc,QACvBX,KAAKC,IAAI6I,OAAO9I,KAAKwH,WAAYxH,KAAK2H,YACtC3H,KAAKC,IAAI8I,OAAO/I,KAAKuH,UAAWvH,KAAK0H,WACrC1H,KAAKC,IAAIW,SAETZ,KAAKC,IAAI+I,KAAO,aAChB,IAAMpH,GAAM5B,KAAKuH,UAAYvH,KAAKwH,YAAY,EACxC3F,GAAM7B,KAAK2H,WAAa3H,KAAK0H,WAAW,EACxCuB,EAAU,OAASrH,EAAG+C,YAAY,GAClCuE,EAAU,OAASrH,EAAG8C,YAAY,GAClCwE,EAAU,OAAS9I,KAAK2B,KAAKJ,EAAKA,EAAKC,EAAKA,GAAI8C,YAAY,GAE9DyE,EAAU,EACVpJ,KAAKuH,UAAYvH,KAAKwH,aAAY4B,GAAWpJ,KAAKC,IAAIoJ,YAAYJ,EAAU,KAAKvD,OAErF1F,KAAKC,IAAIqJ,WAAWL,EAASjJ,KAAKuH,UAAY6B,EAASpJ,KAAK0H,UAAY,GACxE1H,KAAKC,IAAIqJ,WAAWJ,EAASlJ,KAAKuH,UAAY6B,EAASpJ,KAAK0H,UAAY,GACxE1H,KAAKC,IAAIqJ,WAAWH,EAASnJ,KAAKuH,UAAY6B,EAASpJ,KAAK0H,UAAY,M,8BAIxE1H,KAAKuG,MAAMR,QACW,OAAlB/F,KAAKsG,UACLtG,KAAKsG,SAASkC,UAAU,EAAG,EAAGxI,KAAKsG,SAASW,OAAOvB,MAAO1F,KAAKsG,SAASW,OAAOxB,Y,GA1HvE/B,a,iBCWL6F,E,iLARX,OACE,kBAACC,EAAA,EAAD,CAAWhF,UAAU,OACnB,kBAAC,EAAD,W,GAJUd,aCME+F,QACW,cAA7BpG,OAAOqG,SAASC,UAEe,UAA7BtG,OAAOqG,SAASC,UAEhBtG,OAAOqG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.936416d9.chunk.js","sourcesContent":["/**\n * Created by TylerLiu on 2018/12/21.\n */\n\nexport default class Entity {\n\n    constructor(mass, position_x, position_y, velocity_x, velocity_y) {\n        this.mass = mass;\n        this.velocity_x = velocity_x;\n        this.velocity_y = velocity_y;\n        this.position_x = position_x;\n        this.position_y = position_y;\n    }\n\n    static getColor(mass) {\n        //0 mass is white\n        if (mass === 0 || mass <= 0.000001) return '#FFFFFF'\n        let lo = Math.log2(mass)\n        return 'hsl(' + ((lo * 10) | 0) + ', 100%, 50%)'\n    }\n\n    get color() {\n        return Entity.getColor(this.mass)\n    }\n\n\n    get radius() {\n        if (this.mass === 0 || this.mass <= 0.000001) return 2;\n        let lo = Math.log2(this.mass) * 0.75;\n        return lo + 2;\n    }\n\n    draw(ctx) {\n        ctx.beginPath();\n        ctx.arc(this.position_x, this.position_y, this.radius, 0, 2 * Math.PI, false);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.lineWidth = 0;\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0)';\n        ctx.stroke();\n    }\n\n    static drawExample(ctx, mass, x, y) {\n        let e = new Entity(mass, x, y, 0, 0)\n        e.draw(ctx)\n    }\n}","/**\n * Created by TylerLiu on 2018/12/21.\n */\nimport Entity from './Entity.js'\n\nlet NUM_ENLER = 100;\nlet FRAME_SEC = 1 / 30;\n\nexport default class Field {\n    constructor() {\n        this.Entities = []\n    }\n\n    addEntity(mass, position_x, position_y, velocity_x, velocity_y) {\n        this.Entities.push(new Entity(mass, position_x, position_y, velocity_x, velocity_y))\n    }\n\n    //update field to next frame\n    update() {\n        for (let _ = 0; _ < NUM_ENLER; _ ++) {\n            //acceleration\n            let acc_x = new Array(this.Entities.length)\n            let acc_y = new Array(this.Entities.length)\n            for (let i = 0; i < acc_x.length; i ++) {\n                acc_x[i] = acc_y[i] = 0.0\n            }\n\n            for (let i = 0; i < this.Entities.length; i ++)\n                for (let j = i + 1; j < this.Entities.length; j ++) {\n                    let dx = 1.0 * this.Entities[i].position_x - this.Entities[j].position_x;\n                    let dy = 1.0 * this.Entities[i].position_y - this.Entities[j].position_y;\n                    let r_2 = dx * dx + dy * dy;\n                    let acc_m = this.Entities[j].mass / r_2\n                    acc_x[i] += acc_m * (this.Entities[j].position_x - this.Entities[i].position_x) / Math.sqrt(r_2)\n                    acc_y[i] += acc_m * (this.Entities[j].position_y - this.Entities[i].position_y) / Math.sqrt(r_2)\n                    acc_m = this.Entities[i].mass / r_2\n                    acc_x[j] += acc_m * (this.Entities[i].position_x - this.Entities[j].position_x) / Math.sqrt(r_2)\n                    acc_y[j] += acc_m * (this.Entities[i].position_y - this.Entities[j].position_y) / Math.sqrt(r_2)\n                }\n\n            for (let i = 0; i < this.Entities.length; i ++) {\n\n                //multiplier\n                acc_x[i] *= 1.0\n                acc_y[i] *= 1.0\n\n                //update velocity\n                this.Entities[i].velocity_x += acc_x[i] * FRAME_SEC / NUM_ENLER\n                this.Entities[i].velocity_y += acc_y[i] * FRAME_SEC / NUM_ENLER\n\n                //update position\n                this.Entities[i].position_x += this.Entities[i].velocity_x * FRAME_SEC / NUM_ENLER\n                this.Entities[i].position_y += this.Entities[i].velocity_y * FRAME_SEC / NUM_ENLER\n            }\n\n            //collision detection\n            for (let i = 0; i < this.Entities.length; i ++)\n                for (let j = i + 1; j < this.Entities.length; j ++) {\n                    let r_2 = Math.pow(this.Entities[i].position_x - this.Entities[j].position_x, 2) +\n                        Math.pow(this.Entities[i].position_y - this.Entities[j].position_y, 2)\n                    if (Math.sqrt(r_2) <= this.Entities[i].radius + this.Entities[j].radius) { //collided\n                        if (this.Entities[i].mass < 0.000001 &&  this.Entities[j].mass < 0.000001) {\n                            this.Entities[i].position_x = (this.Entities[i].position_x + this.Entities[j].position_x) / 2\n                            this.Entities[i].position_y = (this.Entities[i].position_y + this.Entities[j].position_y) / 2\n                            this.Entities[i].velocity_x = (this.Entities[i].velocity_x + this.Entities[j].velocity_x) / 2\n                            this.Entities[i].velocity_y = (this.Entities[i].velocity_y + this.Entities[j].velocity_y) / 2\n\n                        } else {\n                            this.Entities[i].position_x = (this.Entities[i].position_x * this.Entities[i].mass + this.Entities[j].position_x * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                            this.Entities[i].position_y = (this.Entities[i].position_y * this.Entities[i].mass + this.Entities[j].position_y * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                            this.Entities[i].velocity_x = (this.Entities[i].velocity_x * this.Entities[i].mass + this.Entities[j].velocity_x * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                            this.Entities[i].velocity_y = (this.Entities[i].velocity_y * this.Entities[i].mass + this.Entities[j].velocity_y * this.Entities[j].mass) / (this.Entities[i].mass + this.Entities[j].mass)\n                            this.Entities[i].mass += this.Entities[j].mass\n                        }\n\n                        //delete j\n                        this.Entities.splice(j, 1)\n                        j --\n\n                    }\n                }\n        }\n    }\n\n    draw(ctx, isPlaying) {\n        this.Entities.forEach((e) => e.draw(ctx))\n        if (isPlaying) this.update()\n    }\n\n    draw_path(ctx) {\n        this.Entities.forEach((e) => {\n            ctx.beginPath();\n            ctx.arc(e.position_x, e.position_y, 1, 0, 2 * Math.PI, false);\n            ctx.fillStyle = e.color;\n            ctx.fill();\n            ctx.lineWidth = 0;\n            ctx.strokeStyle = 'rgba(0, 0, 0, 0)';\n            ctx.stroke();\n        })\n    }\n\n    clear() {\n        this.Entities = []\n    }\n}","/**\n * Created by TylerLiu on 2018/12/24.\n */\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Octicon, {primitiveSquare, triangleRight} from 'octicons-react'\n\nexport default class Controller extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: true\n        }\n    }\n\n    render() {\n        if (this.state.playing)\n            return(\n                <Button variant='outline-dark' ref=\"ppButton\" onClick={this.onClick.bind(this)}>\n                    <Octicon icon={primitiveSquare}/> Stop\n                </Button>\n            )\n        else return(\n            <Button variant='outline-dark' ref=\"ppButton\" onClick={this.onClick.bind(this)}>\n                <Octicon icon={triangleRight}/> Play\n            </Button>\n        )\n    }\n\n    componentDidMount() {\n        this.button = this.refs.button;\n        window.addEventListener('resize', ()=>this.setState({}))\n    }\n\n    onClick() {\n        this.props.onClick(!this.state.playing)\n        this.setState({playing: !this.state.playing})\n        this.refs.ppButton.blur()\n        return false;\n    }\n\n\n}\n","/**\n * Created by TylerLiu on 2018/12/24.\n */\n\nimport React from 'react'\nimport './MassSlider.css'\nimport Entity from './Entity'\nimport Col from 'react-bootstrap/Col';\n\nexport default class MassSlider extends React.Component{\n    constructor(props) {\n        super(props)\n        this.selectedMass = 1;\n    }\n\n    render() {\n        return(\n            <Col sm={5} style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\"}}>\n                <style ref=\"style\"/>\n                <input type=\"range\" min=\"-1\" max=\"10\" defaultValue=\"0\" step=\"any\" className=\"slider\"\n                       ref=\"slider\" onChange={this.changeMass.bind(this)}/>\n                <label>Mass: {this.selectedMass.toPrecision(3)}</label>\n            </Col>\n        )\n    }\n\n    toMass(value) {\n        if (value < -0.4) {\n            this.refs.slider.value = -1;\n            return 0;\n        }\n        if (value < 0) {\n            this.refs.slider.value = 0;\n            return 1;\n        }\n        return Math.pow(10, value);\n\n    }\n\n    componentDidMount() {\n        this.selectedMass = this.toMass(this.refs.slider.value);\n        this.refs.style.sheet.insertRule('.slider::-webkit-slider-thumb {background: '+ Entity.getColor(this.selectedMass) + ';}', 0)\n    }\n\n    changeMass() {\n        this.selectedMass = this.toMass(this.refs.slider.value);\n        this.refs.style.sheet.deleteRule(0);\n        this.refs.style.sheet.insertRule('.slider::-webkit-slider-thumb {background: '+ Entity.getColor(this.selectedMass) + ';}', 0)\n        this.setState({});\n        this.props.changeMass(this.selectedMass);\n    }\n}\n","/**\n * Created by TylerLiu on 2018/12/23.\n */\nimport React, { Component } from 'react';\nimport PlayPauseButton from './PlayPauseButton'\nimport MassSlider from \"./MassSlider\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\n\n\nexport default class Controller extends Component{\n\n    constructor(props) {\n        super(props)\n        this.pathDrawing = false;\n    }\n\n    render() {\n        return(\n            <Navbar bg=\"light\" fixed=\"bottom\" className=\"d-flex justify-content-around\" >\n                <PlayPauseButton class=\"btn\"onClick={this.changePlayState.bind(this)} style={{height: \"10vh\", width: \"10vh\", padding:5}}/>\n                <MassSlider changeMass={this.changeMass.bind(this)}/>\n                <Button variant=\"outline-info\" ref=\"pathCheckBox\" onClick={this.changePathDrawing.bind(this)}>Path</Button>\n\n                <span>Entities: {this.numEntities + \"  \"}</span>\n                <Button variant=\"outline-danger\" onClick={(e) => {this.props.stage.clear();\n                        e.target.blur();}}>Clear</Button>\n            </Navbar>\n        )\n\n        //show number of particle\n        //clear button\n    }\n\n    componentDidMount() {\n        this.setState({});\n    }\n\n    changePlayState(new_state) {\n        this.props.stage.isPlaying = new_state\n    }\n\n    changePathDrawing() {\n        this.pathDrawing = !this.pathDrawing;\n        if (this.pathDrawing) {\n            this.refs.pathCheckBox.variant = \"info\";\n            this.refs.pathCheckBox.className = \"btn btn-info\";\n        }\n        else {\n            this.refs.pathCheckBox.variant = \"outline-info\";\n            this.refs.pathCheckBox.className = \"btn btn-outline-info\";\n        }\n        this.props.stage.drawingPath(this.pathDrawing);\n        this.setState({});\n        this.refs.pathCheckBox.blur();\n    }\n\n    changeMass(mass) {\n        this.props.stage.selectedMass = mass;\n    }\n\n    updateEntity(num) {\n        this.numEntities = num;\n        this.setState({});\n    }\n}","import React, { Component } from 'react'\nimport Field from './Field.js'\nimport Controller from \"./Controller\"\nimport Entity from './Entity'\n\nclass Stage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.ctx = null\n        this.path_ctx = null\n        this.field = new Field()\n        this.isPathDrawing = false\n        this.isPlaying = true\n        this.selectedMass = 1\n        this.mouseDown = false\n    }\n\n    render() {\n        return(\n            <div style={{position: \"absolute\", left: 0, top: 0}}>\n                <div style={{height: window.innerHeight, width: window.innerWidth, position: \"relative\"}}>\n                    <canvas ref=\"path_canvas\" width={window.innerWidth} height={window.innerHeight} style={{position: \"absolute\", left: 0, top: 0, zIndex: 0, backgroundColor : 'black'}} />\n                    <canvas ref=\"canvas\" width={window.innerWidth} height={window.innerHeight} style={{position: \"absolute\", left: 0, top: 0, zIndex: 1, backgroundColor : 'transparent'}}/>\n                </div>\n                <Controller ref=\"controller\" stage={this} />\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        this.ctx = canvas.getContext(\"2d\")\n        this.field.addEntity(Math.pow(10, 5), 200, 200, 0, 0)\n        this.field.addEntity(1000, 200, 300, 30, 0)\n        this.field.addEntity(1000, 200, 100, -30, 0)\n        this.field.addEntity(1000, 100, 200, 0, 30)\n        this.field.addEntity(1000, 300, 200, 0, -30)\n        //TODO prepare next state after draw\n        window.requestAnimationFrame(this.draw.bind(this));\n\n        const path_canvas = this.refs.path_canvas\n        this.path_ctx = path_canvas.getContext(\"2d\")\n        window.addEventListener('resize', ()=>this.setState({}))\n\n        this.refs.canvas.onmousedown = (e) => {\n            this.mouseDown = true;\n            this.currentMX = this.mouseDownX = e.offsetX;\n            this.currentMY = this.mouseDownY = e.offsetY;\n        }\n        this.refs.canvas.ontouchstart = (e) => {\n            this.mouseDown = true;\n            this.currentMX = this.mouseDownX = e.touches[0].clientX;\n            this.currentMY = this.mouseDownY = e.touches[0].clientY;\n        }\n\n        this.refs.canvas.onmousemove = (e) => {\n            this.currentMX = e.clientX;\n            this.currentMY = e.clientY;\n        }\n        this.refs.canvas.ontouchmove = (e) => {\n            this.currentMX = e.touches[0].clientX;\n            this.currentMY = e.touches[0].clientY;\n        }\n\n        this.refs.canvas.ontouchcancel = this.refs.canvas.onmouseout = () => {\n            this.mouseDown = false;\n        }\n        this.refs.canvas.onmouseup = (e) => {\n            if (this.mouseDown === true)\n                this.field.addEntity(this.selectedMass, this.mouseDownX, this.mouseDownY,\n                //velocity\n                (e.offsetX - this.mouseDownX)/2, (e.offsetY - this.mouseDownY)/2)\n            this.mouseDown = false;\n        }\n\n        this.refs.canvas.ontouchend = (e) => {\n            if (this.mouseDown === true)\n                this.field.addEntity(this.selectedMass, this.mouseDownX, this.mouseDownY,\n                //velocity\n                (e.changedTouches[0].clientX - this.mouseDownX)/2, (e.changedTouches[0].clientY - this.mouseDownY)/2)\n            this.mouseDown = false;\n        }\n    }\n\n    draw() {\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        this.field.draw(this.ctx, this.isPlaying);\n        if (this.mouseDown) {\n            Entity.drawExample(this.ctx, this.selectedMass, this.mouseDownX, this.mouseDownY)\n            if (this.currentMX !== this.mouseDownX || this.currentMY !== this.mouseDownY) this.drawVelocity();\n        }\n        if (this.isPlaying && this.isPathDrawing) this.field.draw_path(this.path_ctx);\n        window.requestAnimationFrame(this.draw.bind(this));\n        this.refs.controller.updateEntity(this.field.Entities.length)\n    }\n\n    drawingPath(value) {\n        this.isPathDrawing = value;\n        if (!value) this.path_ctx.clearRect(0, 0, this.path_ctx.canvas.width, this.path_ctx.canvas.height);\n    }\n\n    drawVelocity() {\n        this.ctx.beginPath()\n        this.ctx.strokeStyle = \"white\"\n        this.ctx.moveTo(this.mouseDownX, this.mouseDownY)\n        this.ctx.lineTo(this.currentMX, this.currentMY)\n        this.ctx.stroke()\n\n        this.ctx.font = \"12px Arial\"\n        const dx = (this.currentMX - this.mouseDownX)/2\n        const dy = (this.mouseDownY - this.currentMY)/2\n        const XString = \"Vx: \" + dx.toPrecision(3)\n        const YString = \"Vy: \" + dy.toPrecision(3)\n        const MString = \"Vy: \" + Math.sqrt(dx * dx + dy * dy).toPrecision(3)\n\n        let xOffset = 0\n        if (this.currentMX < this.mouseDownX) xOffset -= this.ctx.measureText(XString + \" \").width\n\n        this.ctx.strokeText(XString, this.currentMX + xOffset, this.currentMY - 6)\n        this.ctx.strokeText(YString, this.currentMX + xOffset, this.currentMY + 6)\n        this.ctx.strokeText(MString, this.currentMX + xOffset, this.currentMY + 18)\n    }\n\n    clear() {\n        this.field.clear();\n        if (this.path_ctx !== null)\n            this.path_ctx.clearRect(0, 0, this.path_ctx.canvas.width, this.path_ctx.canvas.height);\n    }\n\n}\nexport default Stage\n","import React, { Component } from 'react';\nimport './App.css';\nimport Stage from './Stage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container className=\"App\">\n        <Stage/>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}